services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    volumes:
      - /var/run/tappd.sock:/var/run/tappd.sock
      - eliza_db:/app/data  # For SQLite database
      - eliza_knowledge:/app/agent/characters/knowledge 
    env_file:
      - .env
    environment:
      - ONNXRUNTIME_NO_PREBUILT_BINARY=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EMBEDDING_OPENAI_MODEL=${EMBEDDING_OPENAI_MODEL}
      - USE_OPENAI_EMBEDDING=${USE_OPENAI_EMBEDDING}
      - LARGE_OPENAI_MODEL=${LARGE_OPENAI_MODEL}
      - MEDIUM_OPENAI_MODEL=${MEDIUM_OPENAI_MODEL}
      - SMALL_OPENAI_MODEL=${SMALL_OPENAI_MODEL}
      - TOKENIZER_TYPE=${TOKENIZER_TYPE}
      - REDPILL_API_KEY=${REDPILL_API_KEY}
      - ELEVENLABS_XI_API_KEY=${ELEVENLABS_XI_API_KEY}
      - ELEVENLABS_MODEL_ID=${ELEVENLABS_MODEL_ID}
      - ELEVENLABS_VOICE_ID=${ELEVENLABS_VOICE_ID}
      - ELEVENLABS_VOICE_STABILITY=${ELEVENLABS_VOICE_STABILITY}
      - ELEVENLABS_VOICE_SIMILARITY_BOOST=${ELEVENLABS_VOICE_SIMILARITY_BOOST}
      - ELEVENLABS_VOICE_STYLE=${ELEVENLABS_VOICE_STYLE}
      - ELEVENLABS_VOICE_USE_SPEAKER_BOOST=${ELEVENLABS_VOICE_USE_SPEAKER_BOOST}
      - ELEVENLABS_OPTIMIZE_STREAMING_LATENCY=${ELEVENLABS_OPTIMIZE_STREAMING_LATENCY}
      - ELEVENLABS_OUTPUT_FORMAT=${ELEVENLABS_OUTPUT_FORMAT}
      - TWITTER_DRY_RUN=${TWITTER_DRY_RUN}
      - TWITTER_USERNAME=${TWITTER_USERNAME}
      - TWITTER_PASSWORD=${TWITTER_PASSWORD}
      - TWITTER_EMAIL=${TWITTER_EMAIL}
      - BIRDEYE_API_KEY=${BIRDEYE_API_KEY}
      - SOL_ADDRESS=${SOL_ADDRESS}
      - SLIPPAGE=${SLIPPAGE}
      - SOLANA_RPC_URL=${SOLANA_RPC_URL}
      - HELIUS_API_KEY=${HELIUS_API_KEY}
      - SERVER_PORT=${SERVER_PORT}
      - WALLET_SECRET_SALT=${WALLET_SECRET_SALT}
      - SANITY_PROJECT_ID=${SANITY_PROJECT_ID}
      - SANITY_DATASET=${SANITY_DATASET}
      - SANITY_API_TOKEN=${SANITY_API_TOKEN}
      - SANITY_API_VERSION=${SANITY_API_VERSION}
      - VITE_SERVER_BASE_URL=${VITE_SERVER_BASE_URL}
      - VITE_WEBSITE_DOMAIN=${VITE_WEBSITE_DOMAIN}
      - VITE_SERVER_PORT=${VITE_SERVER_PORT}
      - VITE_SERVER_URL=${VITE_SERVER_URL}
      - SUPERTOKENS_CONNECTION_URI=${SUPERTOKENS_CONNECTION_URI}
      - SUPERTOKENS_API_KEY=${SUPERTOKENS_API_KEY}
      - WEBSITE_DOMAIN=${WEBSITE_DOMAIN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SERVER_BASE_URL=${SERVER_BASE_URL}
      - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - PASSWORDLESS_CODE_LIFETIME=${PASSWORDLESS_CODE_LIFETIME}
      - PASSWORDLESS_MAX_CODE_INPUT_ATTEMPTS=${PASSWORDLESS_MAX_CODE_INPUT_ATTEMPTS}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    networks:
      default:
        aliases:
          - backend
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: client/Dockerfile
    env_file:
      - .env
    environment:
      - VITE_SERVER_BASE_URL=${VITE_SERVER_BASE_URL}
      - VITE_WEBSITE_DOMAIN=${VITE_WEBSITE_DOMAIN}
      - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}
    ports:
      - "80:80"
      - "443:443" # Add port 443
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro # Mount certificates
      - /var/www/letsencrypt:/var/www/letsencrypt:ro
    networks:
      default:
        aliases:
          - frontend
    restart: always
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  eliza_db:
  eliza_knowledge:
